//Problem Statement
//For a matrix of dimension (N X M) all elements are 0 except at (x,y)
//You can move in any four direction so find the minimum count required to make all element as 1.


#include <iostream>
#include<bits/stdc++.h>

using namespace std;
int manhattan_dist(int N,int M,int x,int y)
{
    int d1=abs(x-0)+abs(y-0);
    int d2=abs(x-0)+abs(y-M);
    int d3=abs(x-N)+abs(y-0);
    int d4=abs(x-N)+abs(y-M);
    return max({d1,d2,d3,d4});
}


int main()
{
    int N,M,x,y;
    cin>>N>>M>>x>>y;
    
    cout<<manhattan_dist(N-1,M-1,x-1,y-1);

    return 0;
}
